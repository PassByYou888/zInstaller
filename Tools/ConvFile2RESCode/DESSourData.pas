unit DESSourData;

interface

uses SysUtils, Classes;

// desSour.txt Origin MD5:0ddfc5d5bccac82c332aa9836e5736c5
procedure Get_desSour_Stream(output: TStream);

implementation

uses ZLib;

type
  T_desSour_PackageBuffer = array [0..2638] of Byte;

const
  // compiled desSour.txt package
  C_desSourPackageBuffer : T_desSour_PackageBuffer = (
   $1E,$25,$00,$00,$00,$00,$00,$00,$78,$DA,$ED,$5A,$DB,$8E,$DB,$46,$12,$7D,$37,$E0,$7F,$E8,$47,$69,$43,$1B,$6C,$DE,$47,$13,$2F,
   $76,$7D,$99,$D8,$48,$B0,$16,$66,$8C,$DD,$07,$61,$12,$48,$23,$4E,$4C,$AF,$86,$1A,$50,$94,$63,$EF,$22,$FF,$BE,$75,$EB,$9B,$48,
   $CE,$D8,$EF,$1B,$38,$30,$D5,$55,$5D,$5D,$75,$AA,$EA,$74,$B3,$E9,$A7,$4F,$FA,$AF,$F7,$F5,$D3,$27,$4A,$7D,$78,$FD,$E6,$EA,$E7,
   $FA,$AB,$7A,$A1,$D6,$5D,$B7,$FE,$AA,$56,$B1,$7A,$FE,$5C,$95,$D7,$6A,$7F,$AB,$5E,$7E,$ED,$EB,$73,$54,$5A,$5A,$A5,$5F,$45,$1F,
   $86,$9F,$3E,$B9,$EF,$F6,$37,$F5,$F6,$D8,$D5,$0A,$06,$67,$37,$FB,$F6,$D0,$AB,$77,$ED,$FD,$B1,$5F,$18,$B3,$E7,$EA,$F3,$BA,$53,
   $EF,$8F,$7D,$38,$C8,$AA,$F0,$E8,$8D,$BD,$69,$6F,$BA,$AF,$F7,$A0,$F5,$72,$BF,$DF,$D5,$EB,$76,$7E,$AE,$9A,$76,$D7,$B4,$35,$2D,
   $65,$DD,$FD,$3B,$7A,$F9,$FE,$56,$17,$E8,$DC,$C1,$B9,$AD,$D1,$6D,$5D,$84,$7E,$1B,$ED,$A4,$1A,$D3,$4E,$AA,$71,$ED,$34,$19,$D3,
   $4E,$93,$71,$ED,$6C,$D4,$76,$36,$61,$3B,$1F,$F5,$3B,$9F,$F0,$BB,$C8,$C6,$B4,$8B,$CC,$D7,$E6,$24,$D6,$87,$D7,$EB,$7E,$0D,$8A,
   $5D,$7D,$B3,$EF,$B6,$38,$A8,$38,$17,$FF,$5C,$EF,$8E,$F5,$E2,$D4,$E4,$39,$6B,$70,$66,$1E,$54,$B9,$DC,$1F,$DB,$2D,$64,$E8,$B0,
   $18,$83,$FA,$04,$05,$99,$B3,$8B,$54,$B7,$38,$C5,$53,$64,$17,$C7,$F6,$A6,$6F,$F6,$ED,$65,$7D,$38,$EE,$FA,$29,$AD,$9B,$48,$6D,
   $17,$A7,$F9,$23,$59,$DD,$6E,$29,$6A,$AA,$21,$1C,$F8,$2F,$C4,$D9,$F4,$CD,$7A,$A7,$96,$75,$77,$77,$EC,$D7,$68,$5D,$FD,$89,$A2,
   $77,$CB,$C5,$08,$96,$33,$5E,$22,$AF,$22,$95,$C7,$91,$CA,$92,$48,$A5,$59,$A4,$92,$22,$52,$1A,$C6,$34,$8C,$25,$11,$EB,$14,$F0,
   $9C,$83,$3C,$03,$79,$0A,$F2,$04,$E4,$09,$8C,$69,$1C,$33,$3A,$F0,$9C,$83,$3C,$03,$79,$0A,$F2,$14,$E7,$C3,$98,$86,$B1,$C2,$E8,
   $C0,$73,$0E,$F2,$0C,$E4,$19,$C8,$53,$90,$27,$30,$A6,$61,$AC,$12,$9D,$BC,$04,$D9,$19,$FC,$AF,$41,$9E,$82,$3C,$07,$39,$8C,$C1,
   $90,$36,$2A,$F0,$9C,$83,$38,$03,$71,$0A,$E2,$04,$C4,$1A,$E5,$38,$C5,$2C,$05,$CF,$39,$C8,$33,$90,$A7,$20,$4F,$40,$9E,$C0,$98,
   $86,$B1,$DC,$E8,$E0,$33,$C8,$33,$90,$A7,$20,$4F,$41,$9E,$C0,$98,$86,$B1,$72,$7E,$CE,$A8,$5E,$34,$ED,$28,$A6,$ED,$E7,$07,$61,
   $C5,$F0,$2A,$8E,$14,$A3,$C3,$A8,$31,$52,$44,$20,$35,$B0,$E2,$9A,$25,$2F,$8F,$4B,$A2,$2B,$B8,$3C,$BA,$95,$9A,$58,$11,$CA,$82,
   $51,$45,$24,$11,$61,$44,$15,$D1,$06,$84,$45,$A7,$C4,$98,$28,$54,$0A,$2F,$E5,$50,$11,$02,$08,$5B,$74,$D0,$08,$67,$10,$B3,$86,
   $D9,$C4,$0C,$62,$66,$13,$03,$3D,$62,$99,$32,$AC,$08,$25,$42,$8C,$B0,$22,$DC,$00,$B1,$E8,$A0,$03,$5C,$2D,$58,$21,$58,$39,$58,
   $2D,$58,$45,$89,$49,$33,$A6,$4D,$73,$06,$CF,$38,$99,$98,$40,$4C,$6C,$92,$1B,$58,$DF,$7C,$B9,$5F,$B7,$07,$84,$73,$00,$AD,$D7,
   $83,$8E,$55,$04,$56,$AC,$18,$4D,$1E,$A4,$14,$8F,$49,$25,$3D,$22,$50,$25,$C1,$6E,$A2,$AE,$B8,$6E,$62,$0E,$08,$03,$D7,$A6,$40,
   $E4,$07,$A1,$8A,$E8,$63,$96,$B4,$89,$52,$7E,$70,$23,$9C,$31,$54,$89,$49,$89,$FC,$A0,$3C,$60,$BE,$30,$AF,$89,$71,$44,$7E,$50,
   $1B,$61,$5D,$52,$AB,$18,$77,$E4,$07,$F5,$06,$16,$1B,$45,$63,$10,$59,$3E,$7B,$B9,$FF,$A2,$EE,$4F,$D1,$58,$2E,$46,$18,$79,$E6,
   $DC,$2C,$23,$E7,$D0,$19,$C7,$88,$CB,$B8,$50,$38,$3C,$72,$B4,$20,$94,$30,$28,$5C,$5D,$9B,$FA,$49,$08,$33,$6A,$C4,$4C,$9A,$B2,
   $24,$80,$8D,$DF,$D4,$5C,$29,$FB,$5D,$48,$5B,$6B,$C2,$DF,$25,$14,$37,$C6,$41,$2A,$97,$AF,$7E,$D3,$8B,$11,$D6,$9F,$3D,$D6,$EB,
   $D6,$F7,$09,$7A,$12,$39,$71,$D4,$18,$1F,$78,$7E,$13,$29,$9C,$52,$D8,$A3,$04,$C0,$0A,$65,$34,$C5,$6B,$B2,$00,$91,$DB,$18,$D9,
   $08,$B2,$96,$71,$42,$CE,$34,$A0,$BD,$DA,$DF,$DD,$77,$F5,$61,$BC,$0F,$00,$BC,$E4,$81,$56,$A0,$C2,$2D,$39,$40,$CA,$9D,$EB,$86,
   $54,$6A,$80,$5B,$22,$09,$72,$9D,$0A,$57,$26,$9C,$3F,$8F,$79,$4D,$35,$49,$45,$A1,$DF,$26,$4E,$4C,$10,$A2,$47,$45,$2B,$94,$95,
   $DB,$D5,$62,$66,$73,$4A,$41,$CE,$99,$CC,$8C,$51,$C4,$1B,$53,$8C,$F0,$22,$09,$62,$0E,$73,$D3,$83,$88,$29,$26,$16,$13,$4C,$FB,
   $0A,$2A,$26,$06,$9C,$7F,$1C,$EF,$36,$75,$87,$DB,$EB,$BF,$A1,$B6,$36,$4D,$7F,$50,$87,$8F,$CD,$6D,$5F,$6F,$B1,$4B,$54,$87,$3B,
   $32,$23,$75,$F5,$61,$31,$72,$24,$9A,$B9,$06,$A0,$32,$09,$FF,$58,$E1,$40,$E2,$5A,$F2,$0A,$5B,$12,$6C,$F1,$22,$F4,$1C,$6E,$FF,
   $00,$32,$1D,$14,$53,$F9,$5B,$E7,$F6,$4C,$A2,$5E,$F0,$0A,$B3,$D9,$0C,$33,$95,$09,$DB,$F0,$02,$39,$A7,$AD,$A2,$D2,$D4,$DC,$55,
   $44,$CB,$C4,$57,$31,$6E,$3F,$E2,$E0,$2C,$96,$FD,$88,$4D,$30,$FB,$8A,$25,$6F,$A2,$66,$AE,$65,$02,$AF,$EC,$64,$2E,$0B,$9C,$55,
   $F1,$AC,$82,$E7,$0B,$29,$E0,$4C,$DE,$83,$C4,$0D,$18,$8B,$ED,$64,$A3,$51,$31,$E3,$CB,$16,$AC,$78,$B3,$91,$B6,$A2,$22,$8C,$C9,
   $65,$F4,$24,$9D,$E3,$6C,$13,$38,$19,$E0,$A5,$B9,$4F,$64,$52,$66,$56,$35,$A1,$24,$64,$00,$B5,$DD,$EA,$29,$CB,$32,$52,$24,$06,
   $B3,$96,$44,$DF,$21,$20,$6D,$9E,$07,$A0,$C9,$4C,$D1,$72,$F8,$E7,$6C,$27,$31,$33,$53,$49,$89,$8B,$3B,$65,$0D,$5E,$42,$CE,$03,
   $99,$05,$8E,$BB,$C4,$F3,$19,$C3,$09,$E3,$66,$40,$CE,$6C,$DC,$62,$83,$E1,$30,$11,$97,$8E,$44,$FD,$94,$A1,$B8,$34,$F3,$19,$80,
   $C2,$9C,$C6,$D0,$AD,$DC,$61,$60,$D3,$18,$4C,$2E,$0C,$C0,$C2,$00,$29,$83,$65,$DB,$40,$EA,$4C,$1B,$8C,$DC,$64,$19,$4C,$4D,$3A,
   $D9,$86,$54,$9E,$AC,$6B,$CE,$06,$62,$2A,$88,$BB,$74,$3B,$AA,$6F,$43,$80,$74,$EE,$6B,$4B,$3F,$23,$A8,$6B,$B3,$93,$E3,$8A,$B1,
   $81,$A0,$B4,$AE,$6B,$E7,$FA,$99,$9B,$6C,$17,$8B,$1D,$34,$C6,$9D,$DC,$E6,$31,$33,$8E,$E3,$C9,$2C,$A8,$B4,$DC,$96,$70,$6C,$93,
   $C4,$87,$87,$2C,$F0,$59,$FC,$C8,$82,$B8,$13,$17,$0F,$AF,$1A,$DB,$4A,$A9,$4C,$4F,$EA,$DC,$22,$7B,$E2,$7A,$26,$14,$6E,$8D,$94,
   $7E,$A9,$4A,$FB,$EB,$58,$36,$64,$B4,$58,$F8,$FD,$2D,$90,$78,$C9,$2B,$6D,$EA,$CF,$6C,$B6,$0B,$5B,$07,$2E,$6E,$61,$20,$53,$8B,
   $01,$BB,$38,$FC,$CF,$6C,$FF,$60,$20,$61,$9D,$7B,$E9,$E0,$D5,$12,$13,$B4,$B8,$92,$5A,$D6,$32,$AC,$11,$A4,$CC,$35,$56,$69,$C9,
   $48,$92,$EF,$4A,$29,$B6,$BC,$E1,$9A,$E4,$CC,$9D,$DB,$1C,$33,$F0,$A1,$90,$7B,$27,$0B,$32,$49,$C9,$F0,$41,$4B,$2D,$DE,$BC,$A2,
   $81,$58,$0B,$0A,$9C,$C7,$82,$4C,$55,$03,$5E,$F3,$32,$96,$59,$9C,$2A,$1B,$B1,$63,$D5,$DC,$71,$74,$50,$E7,$B1,$2D,$50,$CB,$AA,
   $A6,$A6,$F9,$B0,$A0,$13,$BB,$4F,$04,$F9,$66,$BE,$D0,$1E,$8B,$70,$C4,$86,$86,$65,$C7,$AF,$0C,$37,$61,$4A,$EC,$E4,$C2,$CD,$AC,
   $F8,$80,$CE,$93,$4A,$83,$42,$EC,$DA,$3C,$91,$48,$C2,$7C,$A7,$B6,$79,$6C,$85,$08,$AF,$68,$CB,$57,$D2,$64,$D2,$87,$21,$BB,$E4,
   $6E,$F5,$D8,$B8,$9E,$F9,$35,$8A,$D6,$4C,$87,$F8,$AE,$3B,$AE,$D4,$B6,$AA,$C5,$4D,$AF,$6D,$53,$4B,$78,$B9,$5F,$2C,$89,$2D,$EE,
   $D2,$C6,$5C,$79,$DC,$90,$18,$E2,$48,$9D,$1B,$F3,$F9,$5C,$2E,$15,$6E,$E5,$45,$5D,$FD,$54,$F7,$2F,$9B,$5E,$EE,$77,$E0,$E9,$30,
   $B8,$C9,$79,$D7,$6E,$EB,$2F,$0B,$DA,$FD,$E7,$FC,$97,$77,$79,$A3,$F0,$0E,$88,$3D,$6A,$B6,$A2,$45,$C3,$9B,$FA,$F7,$A6,$B5,$02,
   $B5,$78,$01,$73,$C0,$8E,$7A,$A6,$B4,$DC,$02,$34,$B7,$B4,$DE,$0A,$C5,$DB,$E6,$B3,$AA,$AE,$D5,$1A,$8E,$3E,$D0,$7F,$15,$9C,$88,
   $3A,$35,$43,$C1,$DD,$7E,$0B,$31,$CF,$D5,$5F,$E1,$24,$D2,$7F,$AC,$C5,$22,$5D,$5D,$D0,$15,$03,$1A,$D6,$3C,$58,$EF,$0E,$F5,$98,
   $38,$0E,$6E,$16,$94,$72,$17,$5B,$57,$1C,$3B,$DE,$62,$9D,$44,$4E,$31,$47,$4A,$EE,$4E,$28,$F4,$F1,$A0,$61,$DE,$78,$D0,$AF,$EB,
   $9B,$19,$45,$3C,$3F,$B7,$9A,$E4,$AC,$8D,$8E,$E0,$E0,$F8,$CC,$BD,$C8,$FA,$50,$F3,$9A,$70,$DC,$32,$A1,$C4,$0B,$81,$89,$F4,$05,
   $28,$30,$34,$1C,$24,$F4,$DA,$3D,$A5,$D1,$98,$84,$B3,$E0,$37,$CF,$DF,$13,$0C,$32,$91,$F1,$1A,$C7,$ED,$56,$CE,$A0,$08,$DC,$C5,
   $E5,$D4,$2D,$0F,$49,$7F,$5E,$4C,$DC,$22,$A1,$F4,$C3,$BE,$5F,$EF,$DE,$1F,$87,$F7,$44,$13,$60,$7F,$A8,$EF,$EE,$F5,$94,$41,$14,
   $26,$53,$BE,$B4,$91,$7A,$1B,$A9,$26,$52,$9F,$22,$75,$B9,$FF,$23,$82,$57,$94,$DD,$F1,$AE,$5D,$A8,$57,$EB,$6E,$8B,$57,$21,$A7,
   $E9,$BB,$05,$30,$5A,$CA,$97,$EA,$F7,$70,$EE,$57,$DB,$BD,$AB,$2D,$F2,$63,$D5,$12,$8C,$17,$97,$AB,$1A,$1E,$AF,$D5,$97,$3D,$86,
   $0B,$8F,$E7,$63,$16,$7C,$03,$DE,$32,$D4,$07,$A8,$34,$6B,$B1,$33,$E6,$EA,$2F,$AA,$38,$77,$A2,$4F,$A1,$28,$F3,$44,$10,$05,$0A,
   $D9,$95,$46,$FD,$A0,$F4,$35,$68,$24,$F0,$E0,$86,$8A,$6B,$6F,$02,$47,$1C,$CE,$49,$70,$4E,$15,$CC,$49,$71,$28,$53,$3F,$B8,$89,
   $CA,$93,$66,$C3,$45,$72,$7F,$11,$0C,$FA,$AD,$83,$2D,$40,$6D,$10,$B8,$2D,$F9,$B7,$5E,$B9,$9B,$FF,$30,$CF,$98,$D1,$D5,$27,$58,
   $E3,$2D,$41,$3D,$E3,$77,$95,$55,$1B,$E4,$90,$EB,$BE,$9A,$73,$15,$9F,$9F,$DA,$49,$BE,$CF,$4E,$C6,$76,$B2,$81,$9D,$F4,$FB,$EC,
   $24,$6C,$27,$19,$D8,$C9,$BE,$CF,$8E,$9E,$9F,$58,$30,$7D,$39,$F6,$DB,$3D,$87,$C5,$97,$26,$61,$F9,$4A,$DB,$49,$05,$B3,$3B,$4B,
   $2C,$E2,$69,$A6,$C4,$37,$54,$22,$CA,$AB,$E3,$06,$18,$72,$B9,$EE,$FA,$C1,$0D,$EE,$44,$D7,$42,$58,$9B,$71,$8E,$DC,$E0,$F2,$CE,
   $E0,$4A,$8F,$F7,$4E,$52,$06,$EE,$7B,$13,$38,$00,$7F,$80,$1A,$41,$AC,$78,$E3,$09,$73,$DE,$66,$3A,$40,$D2,$F5,$78,$4D,$2E,$DD,
   $17,$F6,$FA,$DD,$BF,$31,$F7,$C2,$61,$6D,$9E,$3E,$A0,$A6,$EF,$46,$24,$0C,$FC,$EA,$C3,$8A,$96,$BB,$9E,$26,$0F,$4E,$8C,$B8,$F8,
   $FC,$C6,$AF,$96,$50,$B4,$9D,$3F,$5A,$26,$D9,$03,$24,$45,$A9,$C2,$AB,$1B,$47,$70,$B2,$87,$6F,$D4,$8F,$2F,$14,$6C,$6A,$E1,$EE,
   $EC,$F0,$97,$24,$59,$17,$57,$9B,$6B,$A7,$16,$EE,$D9,$93,$93,$B6,$AB,$0D,$70,$20,$24,$71,$10,$83,$C9,$A5,$60,$8B,$C8,$46,$83,
   $1C,$8D,$E5,$D2,$C6,$17,$62,$50,$F8,$9C,$65,$96,$77,$9F,$5A,$C4,$2F,$39,$34,$D1,$78,$A4,$5A,$86,$F6,$A4,$68,$1D,$98,$01,$94,
   $0E,$87,$C0,$14,$C4,$1C,$D1,$BD,$22,$0C,$BB,$4C,$B9,$F8,$A7,$94,$91,$C4,$2B,$3B,$C3,$A0,$12,$BA,$A2,$0B,$2F,$26,$29,$74,$B1,
   $1C,$21,$62,$66,$15,$FB,$31,$C8,$FA,$30,$89,$4D,$10,$12,$14,$41,$8B,$45,$00,$34,$73,$5A,$04,$C6,$F4,$EE,$24,$A1,$1E,$A2,$EF,
   $88,$79,$6C,$5E,$4F,$0A,$C2,$4C,$E8,$56,$B8,$0B,$E2,$67,$BA,$87,$AC,$8C,$C0,$40,$41,$8D,$41,$71,$1A,$82,$7C,$A2,$1C,$84,$70,
   $6B,$5B,$A8,$1B,$83,$8A,$1B,$D4,$49,$C2,$2F,$60,$F3,$A9,$B8,$1E,$B1,$AA,$4B,$88,$F6,$11,$D3,$B6,$4A,$1E,$24,$7B,$35,$31,$FD,
   $24,$21,$43,$21,$9E,$67,$FC,$F4,$0D,$8A,$72,$E7,$CF,$EF,$06,$E2,$6E,$DA,$FC,$83,$D5,$3A,$55,$65,$C4,$40,$F4,$7D,$CA,$77,$C6,
   $10,$D0,$03,$B5,$E7,$7D,$06,$3D,$09,$BA,$F3,$B8,$68,$AA,$F0,$A6,$67,$EF,$88,$94,$A0,$24,$BF,$35,$1C,$65,$5E,$38,$D8,$66,$D0,
   $7B,$E1,$32,$98,$5B,$C3,$6C,$C1,$77,$F8,$DF,$AE,$FA,$AE,$5E,$DF,$19,$E6,$B1,$DF,$DE,$79,$F8,$5B,$BF,$BD,$7B,$DF,$57,$37,$C7,
   $DB,$DB,$5D,$DD,$2A,$F0,$36,$4E,$32,$38,$DC,$E1,$5F,$E7,$96,$4F,$51,$6C,$EE,$86,$C3,$AF,$D2,$CE,$AD,$8B,$66,$B7,$7B,$09,$7A,
   $B3,$AB,$E6,$3F,$B5,$3B,$51,$CF,$C3,$3D,$6F,$39,$7D,$D6,$5E,$9A,$B7,$34,$FE,$D9,$D5,$F7,$F5,$BA,$B7,$E5,$F4,$E6,$6A,$26,$FF,
   $42,$61,$F6,$37,$74,$67,$B5,$BC,$9E,$FF,$1A,$A9,$B1,$31,$E2,$45,$09,$D7,$B5,$07,$99,$5F,$02,$51,$9A,$C3,$E1,$B1,$ED,$9B,$1D,
   $8F,$C0,$7B,$25,$7A,$3D,$B6,$95,$EC,$4E,$1C,$5E,$46,$8A,$03,$7C,$D7,$F6,$45,$E6,$EF,$20,$90,$D5,$5F,$EA,$F6,$F7,$FE,$E3,$0C,
   $7D,$89,$0C,$A6,$EC,$01,$65,$EA,$F9,$72,$7F,$68,$E8,$75,$DB,$BE,$8F,$2E,$DD,$23,$35,$92,$4C,$A2,$01,$5C,$87,$AB,$1D,$E7,$8A,
   $83,$28,$18,$A5,$A9,$A0,$4B,$B8,$22,$9E,$1B,$0B,$78,$B6,$B7,$01,$7A,$F2,$A1,$3F,$9E,$F0,$5F,$5D,$D3,$D7,$94,$CD,$88,$DF,$4D,
   $8D,$FC,$8F,$8F,$CD,$AE,$26,$E0,$4C,$D9,$FC,$C8,$BE,$FA,$84,$33,$38,$E4,$73,$14,$97,$F5,$7A,$4B,$F8,$AC,$62,$A0,$B4,$5D,$78,
   $AC,$B5,$25,$74,$32,$1E,$38,$34,$35,$D9,$E6,$77,$E7,$0D,$BB,$33,$1E,$FD,$93,$05,$3A,$26,$A2,$A7,$CF,$D4,$D2,$6A,$3D,$E2,$D8,
   $98,$53,$8F,$38,$04,$AB,$52,$25,$59,$2E,$09,$C0,$F0,$D6,$F3,$C0,$1D,$CD,$DB,$B7,$E4,$EC,$FF,$59,$F9,$F6,$AC,$78,$7C,$FA,$3F,
   $66,$C0,$8C,$85);



procedure DisposeObject(const Obj: TObject);
begin
  if Obj <> nil then
    begin
      try
{$IFDEF AUTOREFCOUNT}
          Obj.DisposeOf;
{$ELSE}
        Obj.Free;
{$ENDIF}
      except
      end;
    end;
end;

function DecompressStream(sour, DeTo: TStream): Boolean;
var
  DC: TZDecompressionStream;
  DeSize: Int64;
begin
  Result := False;
  sour.ReadBuffer(DeSize, 8);
  if DeSize > 0 then
    begin
      DC := TZDecompressionStream.Create(sour);
      Result := DeTo.CopyFrom(DC, DeSize) = DeSize;
      DisposeObject(DC);
    end;
end;

procedure Get_desSour_Stream(output: TStream);
var
  Source: TMemoryStream;
  PrepareSource: TMemoryStream;
  buff: T_desSour_PackageBuffer;
begin
  buff := C_desSourPackageBuffer;
  Source := TMemoryStream.Create;
  Source.WriteBuffer(buff[0], 2639);
  Source.Position := 0;
  DecompressStream(Source, output);
  DisposeObject(Source);
  output.Position := 0;
end;





(*
type TGetStreamProc = procedure(Output: TStream);

procedure RegisterFileStream(MD5Text:string; OnProc: TGetStreamProc; FileName:string);
begin
end;

initialization
  RegisterFileStream('0ddfc5d5bccac82c332aa9836e5736c5', Get_desSour_Stream, 'desSour.txt');
*)
end.
 
